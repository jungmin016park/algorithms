새롭게 계획된 어느 신도시에 N채의 집이 일렬로 새롭게 지어졌다.

각 집에는 1에서 N까지 번호가 붙어 있으며, i번 집은 도시의 가장 왼쪽을 기준으로 만큼 떨어져 있다.

이 도시에는 아직 전기가 연결되어 있지 않다.

그래서 정부는 이 도시에 K개의 발전소를 세워 모든 N채의 집에 전기가 통하도록 하고 싶다.

발전소를 K곳 설치하는 것은 이미 결정된 일이기 때문에, 정부는 전선의 길이를 최소로 하여 발전소 및 전선을 설치하고 싶어한다.

설치되는 발전소가 공급하는 전기 용량은 충분히 크기 때문에 얼마든지 많은 집에 전기를 공급해줄 수 있다.

집의 위치와 설치할 발전소의 수가 주어질 때, 모든 집에 전기를 공급하기 위해 설치해야 하는 전선 길이의 최솟값을 구하는 프로그램을 작성하라.

[입력]

첫 번째 줄에 테스트 케이스의 수 가 주어진다.

각 테스트 케이스의 첫 번째 줄에는 두 정수 이 공백으로 구분되어 주어진다.

두 번째 줄에는 각 집의 위치를 나타내는 N개의 정수 가 공백 하나로 구분되어 주어진다.

[출력]

각 테스트 케이스마다 ‘#x’(x는 테스트케이스 번호를 의미하며 1부터 시작한다)를 출력하고 한 칸을 띄운 후, 설치해야 하는 전선 길이의 최솟값을 출력한다.

입력 예제
 
6
5 2
20 40 50 80 110
7 3
4 7 11 18 22 27 29
1 1
105
2 1
0 100
3 5
33 77 99
6 4
0 100 200 300 400 500
// 테스트 케이스 개수
// 첫 번째 테스트 케이스, N=5, K=2
// 
// 두 번째 테스트 케이스, N=7, K=3
// 
 
 
 
 
 
 
 
 

출력 예제
 
#1 60
#2 13
#3 0
#4 100
#5 0
#6 200
// 첫 번째 테스트 케이스 결과
// 두 번째 테스트 케이스 결과
 
 
 
 


#include <stdio.h>
 
#define DATA_SIZE 100000
 
int ARRAY_CITY[DATA_SIZE];
int ARRAY_CITY2[DATA_SIZE];
 
void merge_sorting(int *array, int start, int end, int *array2);
void merge(int *array, int start, int mid, int end, int *array2);
 
int main() {
 
//  freopen("[MH1709] 신도시 전기 연결하기_input.txt", "r", stdin);
 
    int T;
    scanf("%d", &T);
    for (int tc = 1; tc <= T; tc++) {
        int ans = 0;
        int N, K;
 
 
        scanf("%d %d", &N, &K);
 
        for (int i = 0; i < N; i++) {
            scanf("%d", &ARRAY_CITY[i]);
        }
 
        for (int i = 0; i < N - 1; i++) {
            ARRAY_CITY[i] -= ARRAY_CITY[i + 1];
            ARRAY_CITY[i] *= -1;
            ans += ARRAY_CITY[i];
        }
 
        merge_sorting(ARRAY_CITY, 0, N - 2, ARRAY_CITY2);
 
        for (int i = 0; ((i < N-1) && (i < K-1)); i++) {
            ans -= ARRAY_CITY[i];
        }
 
        printf("#%d %d\n", tc, ans);
    }
 
 
    return 0;
}
